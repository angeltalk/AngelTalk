language: android
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    # - tools
    # - platform-tools

    # The BuildTools version used by your project
    - build-tools-28.0.3

    # The SDK version used to compile your project
    - android-28

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    # - sys-img-x86-android-26
    # - sys-img-armeabi-v7a-android-17

dist: trusty
sudo: required

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

before_install:
#- sh script/decrypt.sh
- chmod +x gradlew
- chmod +rx app

skip_cleanup: true

before_deploy:
- ./gradlew clean build coverageReport exportVersionName

- file_date=$(date "+%m.%d-%H:%M")
- version_name=$(VERSION_NAME)

- file_name_debug="app/build/outputs/apk/debug/AngelTalk-$version_name-debug.apk"
- file_location_debug="app/build/outputs/apk/debug/AngelTalk-$version_name-debug-$file_date.apk"
- cp $file_location_debug $file_name_debug

- file_name_release="app/build/outputs/apk/release/AngelTalk-$version_name-release.apk"
- file_location_release="app/build/outputs/apk/release/AngelTalk-$version_name-release-$file_date.apk"
- cp $file_location_release $file_name_release

deploy:
- DEPLOY_BRANCH=$(git symbolic-ref --short HEAD)
- DEPLOY_COMMIT=$(git log --pretty=format:'%h' -n 1)
- DEPLOY_COMMIT_MESSAGE=$(git log -1 --pretty=%B)

- echo $DEPLOY_BRANCH
- echo $DEPLOY_COMMIT
- echo $DEPLOY_COMMIT_MESSAGE

- version_name=$(VERSION_NAME)

- filename="$(find . -name AngelTalk-$version_name-debug-*.apk)"
- SLACK_TEXT="[ *DEBUG* \`$DEPLOY_BRANCH\` | \`$DEPLOY_COMMIT\` ] ${DEPLOY_COMMIT_MESSAGE:-none} "
- curl -F "token=$SLACK_KEY" -F "channels=deploy-android" -F "initial_comment=$SLACK_TEXT" -F "file=@$filename" https://slack.com/api/files.upload

- filename="$(find . -name AngelTalk-$version_name-release-*.apk)"
- SLACK_TEXT="[ *RELEASE* \`$DEPLOY_BRANCH\` | \`$DEPLOY_COMMIT\` ] ${DEPLOY_COMMIT_MESSAGE:-none} "
- curl -F "token=$SLACK_KEY" -F "channels=deploy-android" -F "initial_comment=$SLACK_TEXT" -F "file=@$filename" https://slack.com/api/files.upload

