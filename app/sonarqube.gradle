apply plugin: 'org.sonarqube'

ext {
    SONAR_HOST = project.hasProperty('sonarHost') ? project.getProperty('sonarHost') : "http://localhost:9000"
}
sonarqube() {
    //noinspection GroovyAssignabilityCheck
    properties {
        /* SonarQube needs to be informed about your libraries and the android.jar to understand that methods like
     * onResume() is called by the Android framework. Without that information SonarQube will very likely create warnings
     * that those methods are never used and they should be removed. Same applies for libraries where parent classes
     * are required to understand how a class works and is used. */
        def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-24/android.jar," + "${project.buildDir}/intermediates/exploded-aar/**/classes.jar"
        property "sonar.projectName", (String) android.defaultConfig.applicationId
        property "sonar.projectKey", android.defaultConfig.applicationId + android.defaultConfig.versionName
        property "sonar.sourceEncoding", "UTF-8"

        property "sonar.sources", "./src/main/"
        property "sonar.libraries", libraries
        property "sonar.binaries", "/intermediates/classes/debug"
        property "sonar.java.binaries", "${project.buildDir}/intermediates/classes/debug"
        property "sonar.java.libraries", libraries
        property "sonar.exclusions", "build/**,**/*.png,*.iml, **/*generated*, "

        property "sonar.import_unknown_files", true
        property "sonar.android.lint.report", "./build/outputs/lint-results.xml"
        property "sonar.host.url", SONAR_HOST
        property "sonar.tests", "./src/test/, ./src/androidTest/"
        property "sonar.jacoco.reportPath", fileTree(dir: project.projectDir, includes: ['**/*.exec'])
        property "sonar.jacoco.itReportPath", fileTree(dir: project.projectDir, includes: ['**/*.ec'])
        property "sonar.java.test.binaries", "${project.buildDir}/intermediates/classes/debug"
        property "sonar.java.test.libraries", libraries
    }
}
