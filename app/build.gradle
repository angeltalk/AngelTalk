apply plugin: 'com.android.application'
apply plugin: 'org.sonarqube'
apply plugin: 'com.google.gms.google-services'

apply from: 'sonarqube.gradle'
apply plugin: 'jacoco'


android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    useLibrary 'org.apache.http.legacy'

    signingConfigs {
        debug {
            storeFile file("../angeltalk.jks")
            storePassword "Angel123\$"
            keyAlias "debugkey"
            keyPassword "Angel123\$"
        }
    }

    defaultConfig {
        applicationId "angeltalk.plus"
        minSdkVersion 23
        targetSdkVersion 26
        versionCode 15
        versionName "2.4"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
        unitTests.all {
            jvmArgs '-Xmx2g', '-XX:MaxPermSize=1024m', '-XX:+HeapDumpOnOutOfMemoryError'
            jacoco {
                includeNoLocationClasses = true
            }
            forkEvery = 10
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
            signingConfig signingConfigs.debug
        }
        release {
            testCoverageEnabled = false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = new File("AngelTalk-${variant.versionName}-${variant.name}-" + getDate() + ".apk")
        }
    }
    lintOptions {
        abortOnError false
    }
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

jacoco {
    toolVersion = "0.8.2"
}

task exportVersionName {
    doLast {
        exec {
            workingDir '.'
            commandLine "export VERSION_NAME=$project.android.defaultConfig.versionName"
        }
    }
}


task coverageReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: "${project.buildDir}/intermediates/classes/debug",
            includes: [
                    '**/**/*',
            ],
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       'com/android/**/*.class',
                       '**/AngelmanApplication.class',
                       '**/TestAngelmanApplication.class',
                       '**/UITest.class',
                       '**/Dagger*.class',
                       '**/*Test*.class',
                       '**/*ViewBinding*.class',
                       '**/*Builder.class',
                       '**/AngelmanComponent.class',
                       '**/AngelmanModule*.class',
                       '**/*$ViewInjector*.*',
                       '**/*_MembersInjector*.*',
                       '**/*$ModuleAdapter*.*',
                       '**/*$InjectAdapter*.*',
                       '**/*$ViewBinder*.*',
                       '**/*Shadow*.class',
                       '**/Camera2Activity*.class',
                       '**/VideoFragment*.class',
                       '**/VideoCardTextureView*.class',
                       '**/*Transfer*.class',
                       '**/DatabaseHelper.class',
                       '**/AbstractActivity.class'

            ]
    )

    def coverageSourceDirs = ["../app/src/main/java"]
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("${project.buildDir}/jacoco/testDebugUnitTest.exec")

    reports {
        xml {
            enabled = true
            destination "${project.buildDir}/reports/jacoco/jacoco.xml"
        }
        csv.enabled false
        html {
            enabled = true
            destination "${project.buildDir}/reports/jacoco/html"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation('com.squareup.assertj:assertj-android:1.2.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    testImplementation "org.robolectric:robolectric:4.1"
    testImplementation "androidx.test:core:1.1.0"
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.dagger:dagger-compiler:2.20'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.jacoco:org.jacoco.agent:0.8.2'
    testImplementation 'org.projectlombok:lombok:1.16.18'

    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:support-v13:28.0.0'
    implementation 'com.android.support:percent:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'


    implementation 'com.google.guava:guava:24.1.1-android'
    implementation 'me.everything:overscroll-decor-android:1.0.4'
    implementation 'jp.wasabeef:blurry:2.0.3'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.romandanylyk:pageindicatorview:0.0.7'
    implementation 'ch.acra:acra:4.11'
    implementation 'com.google.dagger:dagger:2.20'
    compileOnly 'org.projectlombok:lombok:1.16.18'
    implementation 'com.jakewharton:butterknife:8.4.0'
    implementation 'com.google.firebase:firebase-database:10.2.0'
    implementation 'com.google.firebase:firebase-storage:10.2.0'
    implementation 'com.google.firebase:firebase-auth:10.2.0'
    implementation 'com.kakao.sdk:kakaolink:1.1.36'
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.20'
    annotationProcessor "org.projectlombok:lombok:1.16.18"
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'

    testAnnotationProcessor  "org.projectlombok:lombok:1.16.18"
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.20'
    compileOnly 'javax.annotation:jsr250-api:1.0'
}